<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>إلغاء الأمر</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(جميع)</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>الثوابت</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>الحقول</value>
  </data>
  <data name="Contains.Description" xml:space="preserve">
    <value>يحتوي على (السلسلة، سلسلة فرعية)
تقوم بإرجاع True إذا كانت السلسلة الفرعية يحدث داخل السلسلة؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Value)
إرجاع جيب التمام لزاوية محددة بالراديان.</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Value)
إرجاع جيب التمام الزائدي من زاوية محددة بالراديان.</value>
  </data>
  <data name="CountAggregate.Description" xml:space="preserve">
    <value>)
تقوم بإرجاع عدد الكائنات في مجموعة-</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>تقوم بإرجاع مؤشر بيانات الصف الحالي في مصدر بيانات. لاحظ أن هذا المؤشر الصفر.</value>
  </data>
  <data name="DateDiffDay.Description" xml:space="preserve">
    <value>داتيديفداي (startDate، endDate)
تقوم بإرجاع عدد الحدود اليوم بين تاريخين غير قبول القيم الخالية.</value>
  </data>
  <data name="DateDiffHour.Description" xml:space="preserve">
    <value>داتيديفهور (startDate، endDate)
إرجاع عدد حدود ساعة بين تاريخين غير nullable.</value>
  </data>
  <data name="DateDiffMilliSecond.Description" xml:space="preserve">
    <value>داتيديفميليسيكوند (startDate، endDate)
تقوم بإرجاع عدد الميلي ثانية الحدود بين تاريخين غير قبول القيم الخالية.</value>
  </data>
  <data name="DateDiffMinute.Description" xml:space="preserve">
    <value>داتيديفمينوتي (startDate، endDate)
إرجاع عدد الحدود الدقيقة بين تاريخين غير nullable.</value>
  </data>
  <data name="DateDiffMonth.Description" xml:space="preserve">
    <value>داتيديفمونث (startDate، endDate)
إرجاع عدد حدود الشهر بين تاريخين غير nullable.</value>
  </data>
  <data name="DateDiffSecond.Description" xml:space="preserve">
    <value>داتيديفسيكوند (startDate، endDate)
إرجاع الرقم الثاني للحدود بين هذين التاريخين غير nullable.</value>
  </data>
  <data name="DateDiffTick.Description" xml:space="preserve">
    <value>داتيديفتيك (startDate، endDate)
إرجاع عدد التجزئة الحدود بين هذين التاريخين غير nullable.</value>
  </data>
  <data name="DateDiffYear.Description" xml:space="preserve">
    <value>داتيديفيير (startDate، endDate)
إرجاع عدد حدود السنة بين تاريخين غير قبول القيم الخالية.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>يقسم المعامل الأول والثاني-</value>
  </data>
  <data name="EndsWith.Description" xml:space="preserve">
    <value>(السلسلة، اندسترينج)
تقوم بإرجاع True إذا كانت نهاية السلسلة تطابق اندسترينج؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>إرجاع true إذا كان كلا المعاملات لها نفس القيمة؛ وإلا، تقوم بإرجاع false.</value>
  </data>
  <data name="ExistsAggregate.Description" xml:space="preserve">
    <value>Exists()
يحدد ما إذا كان الكائن موجود في المجموعة-</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Value)
إرجاع القيمة الأسية للتعبير تعويم معين.</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>محرر التعبير</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>تمثل القيمة المنطقية False.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>النوع من هذا الحقل:</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>ماكس (Value1, Value2)
إرجاع أكبر قيمة من القيم المحددة.</value>
  </data>
  <data name="MaxAggregate.Description" xml:space="preserve">
    <value>Max(Value)
تقوم بإرجاع قيمة التعبير الأقصى في مجموعة-</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>(Value1, Value2)
إرجاع القيمة الدنيا من القيم المحددة.</value>
  </data>
  <data name="MinAggregate.Description" xml:space="preserve">
    <value>Min(Value)
تقوم بإرجاع قيمة التعبير الحد الأدنى في مجموعة-</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>ويرى الفرق بين رقمين.</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>إرجاع الباقي (المعامل) التي يتم الحصول عليها بقسمة تعبير رقمي واحد إلى آخر-</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>بضرب قيمة تعبيرين.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>ينفذ النفي المنطقي على تعبير.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>إرجاع true إذا لم يكن لديك المعاملات نفس القيمة؛ وإلا، تقوم بإرجاع false.</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>)
تقوم بإرجاع التاريخ الحالي للنظام والوقت-</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>يمثل مرجع null، الذي لا يشير إلى أي كائن.</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>عوامل تشغيل</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>يؤدي انفصال منطقي على التعبيرات المنطقية اثنين.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>(السلسلة، وطول)
اليسار محاذاة الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع أحرف المسافة البيضاء تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft (السلسلة، الطول، Char)
اليسار محاذاة الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع شار محددة تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>(السلسلة، وطول)
محاذاة إلى اليمين الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع أحرف المسافة البيضاء تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>بدرية (السلسلة، الطول، Char)
محاذاة إلى اليمين الأحرف في السلسلة المحددة، حشوة جانبها الأيسر مع شار محددة تصل إلى إجمالي طول محدد.</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>النوع من هذه المعلمة:</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>المعلمات</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>يضيف قيمة تعبير رقمي واحد إلى آخر، أو وصل سلسلتين.</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>(القيمة، السلطة)
تقوم بإرجاع عدد محدد مرفوع إلى إس محدد.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>(السلسلة، SubString2، String3)
تقوم بإرجاع نسخة من السلسلة 1، الذي تم استبدال SubString2 مع String3.</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(String)
عكس ترتيب العناصر الموجودة ضمن سلسلة-</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd()
إرجاع رقم عشوائي وهذا هو أقل من 1، لكن أكبر من أو يساوي الصفر.</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(Value)
يتم تقريب القيمة لأقرب عدد صحيح.</value>
  </data>
  <data name="Round2Param.Description" xml:space="preserve">
    <value>جولة (القيمة، الدقة)
يتم تقريب القيمة لأقرب عدد صحيح، أو لعدد محدد من المنازل العشرية.</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>تقوم بإرجاع المبلغ الإجمالي لصفوف البيانات في مصدر بيانات-</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Value)
إرجاع الإيجابية (+ 1) أو صفر (0) أو سالبة (-1) علامة على تعبير معين.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Value)
إرجاع جيب الزاوية للزاوية، تعريف بالراديان.</value>
  </data>
  <data name="SingleAggregate.Description" xml:space="preserve">
    <value>Single()
تقوم بإرجاع كائن واحد من المجموعة-</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Value)
إرجاع جيب الزاوية لزاوية محددة بالتقدير الدائري-</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Value)
إرجاع الجذر التربيعي لرقم معين.</value>
  </data>
  <data name="StartsWith.Description" xml:space="preserve">
    <value>(السلسلة، ستارتسترينج)
تقوم بإرجاع True إذا كان بداية سلسلة مباريات ستارتسترينج؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>(السلسلة، ستارتبوسيشن)
استرداد سلسلة فرعية من السلسلة. تبدأ السلسلة الفرعية في ستارتبوسيشن-</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>سلسلة فرعية (طول السلسلة، ستارتبوسيشن،)
استرداد سلسلة فرعية من السلسلة. السلسلة الفرعية يبدأ في ستارتبوسيشن وقد الطول المحدد.</value>
  </data>
  <data name="SumAggregate.Description" xml:space="preserve">
    <value>Sum(Value)
إرجاع مجموع كافة قيم التعبير في جمع-</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Value)
إرجاع ظل الزاوية المحددة بوحدة الراديان.</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Value)
إرجاع الظل الزائدي من زاوية محددة بالراديان.</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Today)
تقوم بإرجاع التاريخ الحالي. بغض النظر عن الوقت الفعلي، هذه الدالة تقوم بإرجاع منتصف ليل التاريخ الحالي.</value>
  </data>
  <data name="ToDecimal.Description" xml:space="preserve">
    <value>ToDecimal(Value)
تحويل القيمة إلى عدد عشري مكافئ.</value>
  </data>
  <data name="ToDouble.Description" xml:space="preserve">
    <value>ToDouble(Value)
تحويل القيمة إلى عدد النقطة عائمة الدقة المزدوجة 64 بت مكافئ.</value>
  </data>
  <data name="ToFloat.Description" xml:space="preserve">
    <value>ToFloat(Value)
تحويل القيمة إلى عدد النقطة عائمة الدقة 32 بت مكافئ.</value>
  </data>
  <data name="ToInt.Description" xml:space="preserve">
    <value>ToInt(Value)
تحويل القيمة إلى عدد صحيح 32-بت موقعة مكافئ.</value>
  </data>
  <data name="ToLong.Description" xml:space="preserve">
    <value>ToLong(Value)
تحويل القيمة إلى عدد صحيح 64 بت موقعة مكافئ.</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(Value)
تقوم بإرجاع تمثيل سلسلة لكائن ما.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(String)
إزالة كافة أحرف المسافات الرائدة وزائدة من السلسلة-</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>تمثل القيمة المنطقية True.</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>تعبير</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(String)
تقوم بإرجاع سلسلة في أحرف كبيرة.</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays (DateTime، دايسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من الأيام بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>(DateTime، هورسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من ساعات بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>(DateTime، ميليسيكوندسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد المللي ثانية بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>(DateTime، مينوتيسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد الدقائق بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>(DateTime، مونثسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد من أشهر بعيداً عن التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>(DateTime، سيكوندسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من الثواني بعيداً التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>(DateTime، تيكسكونت)
تقوم بإرجاع قيمة التاريخ والوقت المحدد بعدد علامات التجزئة بعيداً التاريخ والوقت المحدد.</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>(التاريخ والوقت، والمدى الزمني)
تقوم بإرجاع قيمة التاريخ والوقت التي يتم بعيداً عن التاريخ والوقت المحدد للمدى الزمني المعطى.</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>(DateTime، ييرسكونت)
تقوم بإرجاع قيمة التاريخ والوقت هو عدد محدد من السنوات بعيداً عن سبيسييد الوقت والتاريخ.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>ينفذ عطف منطقي على تعبيرين.</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(String)
تقوم بإرجاع قيمة الرمز ASCII الحرف الموجود في أقصى اليسار في تعبير حرف.</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Value)
إرجاع قوس الجيب عدد (الزاوية بالراديان، جيب الزاوية الذي هو تعبير معين تعويم).</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Value)
إرجاع قوس الظل لعدد (زاوية بالتقدير الدائري، الذي ظل هو التعبير تعويم معين).</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2 (Value1, Value2)
إرجاع الزاوية التي يكون ظلها هو حاصل قسمة رقمين المحدد، بالتقدير الدائري-</value>
  </data>
  <data name="AvgAggregate.Description" xml:space="preserve">
    <value>Avg(Value)
يتم تقييم متوسط القيم في المجموعة-</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>بين (,)
تحديد مجموعة لاختبار. إرجاع true إذا كانت قيمة أكبر من أو مساوية للمعامل الأول وأقل من أو يساوي إلى المعامل الثاني.</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>(Value1, Value2)
إرجاع Int64 الذي يحتوي على المنتج الكامل من اثنين تحديد أرقام 32 بت.</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>يقوم بإجراء عملية منطقية المختصة بالبت بين قيمتين عدد صحيح.</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>يقارن كل بت من المعامل الأول إلى بت المطابق للمعامل الثاني. إذا كان أما بت 1، يتم تعيين بت نتيجة المقابلة إلى 1. خلاف ذلك، يتم تعيين بت نتيجة المقابلة إلى 0-</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>ينفذ استبعاد منطقي على تعبيرين منطقية، أو إلى استبعاد أحادي المعامل على تعبيرين.</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Value)
إرجاع أقل عدد صحيح أكبر من أو يساوي تعبير رقمي معين.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>(String1، String2)
تقوم بإرجاع موضع بدء String1 داخل String2، بدءاً من موضع الحرف صفر إلى نهاية سلسلة.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex (String1 String2، ستارتلوكيشن)
تقوم بإرجاع موضع بدء String1 داخل String2، بدءاً من موضع الحرف ستارتلوكيشن إلى نهاية سلسلة.</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat (سترينجن، String1،...)
تقوم بإرجاع قيمة سلسلة تحتوي على سلسلة السلسلة الحالية مع أية سلاسل إضافية.</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>محرر التعبير شرط</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>محرر شرط</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>محرر التعبير</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Value)
إرجاع القيمة المطلقة، وإيجابية لتعبير رقمي معين.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Value)
إرجاع قوس جيب التمام لعدد (الزاوية بالراديان، يكون جيب تمام هو تعبير معين تعويم).</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Number)
تحويل إينتيجيراسسييكودي إلى حرف.</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Value)
إرجاع أكبر عدد صحيح أقل من أو يساوي إلى تعبير رقمي معين.</value>
  </data>
  <data name="FormatRule.Caption" xml:space="preserve">
    <value>محرر التعبير قاعدة تنسيق</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>وظائف</value>
  </data>
  <data name="functionsTypes.Properties.AggregateItems" xml:space="preserve">
    <value>التجميعية</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>التاريخ والوقت</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>المنطقية</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>الرياضيات</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>السلسلة</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DateTime)
مقتطفات من تاريخ من التاريخ والوقت المحدد.</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DateTime)
تستخرج يوميا من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
مقتطفات يوم من الأسبوع من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
مقتطفات يوم من السنة من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DateTime)
مقتطفات ساعة من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
مقتطفات ميلي ثانية من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DateTime)
مقتطفات دقيقة من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DateTime)
مقتطفات من شهر من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DateTime)
مقتطفات ثانية من التاريخ والوقت المحددة.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
مقتطفات الوقت من اليوم من التاريخ والوقت المحدد، في القراد.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DateTime)
مقتطفات من سنة من التاريخ والوقت المحدد.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>أكبر من المشغل. يستخدم لمقارنة التعبيرات.</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>أكبر من أو مساو للمشغل. يستخدم لمقارنة التعبيرات.</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>
التسمية التوضيحية: {1}
نوع هذا الحقل: {2}</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif (التعبير، ترويبارت، فالسيبارت)
إرجاع أما ترويبارت أو فالسيبارت، اعتماداً على تقييم "تعبير منطقي".</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
اختبارات لوجود الخاصية في كائن.</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>(String2 String1، ستارتبوسيشن،)
إدراج String2 في String1 في الموضع المحدد بواسطة ستارتبوسيتون</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Value)
إرجاع True إذا كانت القيمة المحددة غير فارغة (null).</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(String)
إرجاع True إذا كان الكائن المحدد سلسلة فارغة أو سلسلة فارغة؛ وإلا، يتم إرجاع False.</value>
  </data>
  <data name="IsThisMonth.Description" xml:space="preserve">
    <value>IsThisMonth(DateTime)
تقوم بإرجاع True إذا كان التاريخ المحدد يندرج في الشهر الحالي.</value>
  </data>
  <data name="IsThisWeek.Description" xml:space="preserve">
    <value>IsThisWeek(DateTime)
تقوم بإرجاع True إذا كان التاريخ المحدد يقع في غضون الأسبوع الحالي-</value>
  </data>
  <data name="IsThisYear.Description" xml:space="preserve">
    <value>IsThisYear(DateTime)
إرجاع True إذا كان التاريخ المحدد يندرج في السنة الحالية-</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Value)
إرجاع عدد صحيح يحتوي على أما عدد الأحرف في سلسلة أو عدد وحدات البايت المطلوبة لتخزين متغير القيمة الاسمية-</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>أقل من المشغل. يستخدم لمقارنة التعبيرات.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>أقل من أو يساوي إلى المشغل. يستخدم لمقارنة التعبيرات.</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>مقارنة سلسلة مقابل نقش. إذا كانت قيمة السلسلة يطابق النمط، والنتيجة الحقيقية. إذا لم تطابق السلسلة النمط، والنتيجة كاذبة. إذا كانت السلسلة ونمط السلاسل الفارغة، والنتيجة true.</value>
  </data>
  <data name="LocalDateTimeDayAfterTomorrow.Description" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
تقوم بإرجاع قيمة التاريخ والوقت الموافق ليوم بعد غد-</value>
  </data>
  <data name="LocalDateTimeLastWeek.Description" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من الأسبوع السابق-</value>
  </data>
  <data name="LocalDateTimeNextMonth.Description" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من الشهر القادم-</value>
  </data>
  <data name="LocalDateTimeNextWeek.Description" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من الأسبوع التالي-</value>
  </data>
  <data name="LocalDateTimeNextYear.Description" xml:space="preserve">
    <value>LocalDateTimeNextYear()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من السنة التالية-</value>
  </data>
  <data name="LocalDateTimeNow.Description" xml:space="preserve">
    <value>LocalDateTimeNow()
تقوم بإرجاع قيمة التاريخ والوقت المقابل لهذه اللحظة الراهنة في الوقت-</value>
  </data>
  <data name="LocalDateTimeThisMonth.Description" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من الشهر الحالي-</value>
  </data>
  <data name="LocalDateTimeThisWeek.Description" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من الأسبوع الحالي-</value>
  </data>
  <data name="LocalDateTimeThisYear.Description" xml:space="preserve">
    <value>LocalDateTimeThisYear()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من العام الحالي-</value>
  </data>
  <data name="LocalDateTimeToday.Description" xml:space="preserve">
    <value>LocalDateTimeToday()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم-</value>
  </data>
  <data name="LocalDateTimeTomorrow.Description" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
تقوم بإرجاع قيمة تاريخ-وقت المقابلة إلى الغد.</value>
  </data>
  <data name="LocalDateTimeTwoWeeksAway.Description" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
تقوم بإرجاع قيمة التاريخ والوقت الموافق لليوم الأول من الأسبوع الذي يتم بعد الأسبوع القادم-</value>
  </data>
  <data name="LocalDateTimeYesterday.Description" xml:space="preserve">
    <value>LocalDateTimeYesterday()
تقوم بإرجاع قيمة التاريخ والوقت الموافق ليوم أمس-</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Value)
إرجاع اللوغاريتم الطبيعي لرقم محدد-</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Value)
إرجاع 10 قاعدة اللوغاريتم لعدد محدد.</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>(القيمة، قاعدة)
إرجاع اللوغاريتم لعدد محدد في قاعدة محدد.</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(String)
تقوم بإرجاع السلسلة بأحرف صغيرة-</value>
  </data>
  <data name="Remove2Param.Description" xml:space="preserve">
    <value>(السلسلة، ستارتبوسيشن)
حذف كافة الأحرف من هذا المثيل، بدءاً من موضع محدد.</value>
  </data>
  <data name="Remove3Param.Description" xml:space="preserve">
    <value>(طول السلسلة، ستارتبوسيشن،)
يحذف عدد محدد من الأحرف من هذا المثيل، بدءاً من موضع محدد.</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
تقوم بإرجاع التاريخ الحالي للنظام والوقت، أعربت عن أنها "حسب التوقيت العالمي" (UTC).</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>المتغيرات</value>
  </data>
</root>