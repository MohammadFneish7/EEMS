function initAppriseSupport() {
	var positiveWeight = 1;
	var middleWeigth = 0;
	var negativeWeight = -1;
	var $appriseDiv = $('.apprise-container');

	var $negative = $('#apprise-negative');
	var $middle = $('#apprise-middle');
	var $positive = $('#apprise-positive');

	var $feedbackDiv = $('#feedback');
	var $detailsLink = $('#details-link');
	var $cancelBtn = $('#cancel-btn');
	var $message = $('#apprise-message');
	var $sendMessageBtn = $('#apprise-message-btn');
	var currentMark = parseInt($('#currentAppraiseMark').val());
	var openedEmotion;

	var sendEvent = function (event, weight, message) {
	    var topic = GetPath().split("/");
	    var project = topic[0];
	    topic.shift();
	    var doc = topic.join("/");
	    var saveUrl = ApiUrl + 'Feedback/Save';
		$.ajax({
			url: saveUrl,
			type: "POST",
		    dataType: "JSON",
		    data: {
		        Value: weight,
		        Message: message,
		        VisitorId: $.cookie("DXVisitor") || null,
		        ProtectedUserId: userId,
		        Project: project,
		        Document: doc
		    },
			success: function (data) {
				if (!data || !data.Success) {
					$appriseDiv.show();
					//SHOULD BE DEFAULT ERROR MODAL
					//alert("Sorry, an operation did not complete successfully");
				}
			},
			error: function () {
				$appriseDiv.show();
				//SHOULD BE DEFAULT ERROR MODAL
				//alert("Sorry, a server error occurred");
			}
		});
	}
	function GetPath() {
	    return decodeURIComponent(document.location.pathname.substring(AppPath.length).replace(/^\/|\/$/g, '').replace(/\+/g, " "));
	}
	function hideDetails(cancelCallback) {
		$feedbackDiv.fadeOut('fast', AdjustDocument);
		$detailsLink.fadeOut('fast');
		$cancelBtn.fadeOut('fast', cancelCallback);
	}

	function postComment(event, weight) {
		hideDetails();
		var message = $message.val();
		if (!message) {
			return;
		}
		sendEvent(event, weight, message);
	}
	function colorSmiles(weight) {
		var selectedClass = 'selected';
		switch (weight) {
			case positiveWeight:
				$positive.addClass(selectedClass);
				$negative.removeClass(selectedClass);
				$middle.removeClass(selectedClass);
				break;
			case middleWeigth:
				$positive.removeClass(selectedClass);
				$negative.removeClass(selectedClass);
				$middle.addClass(selectedClass);
				break;
			case negativeWeight:
				$positive.removeClass(selectedClass);
				$negative.addClass(selectedClass);
				$middle.removeClass(selectedClass);
				break;
		}
	}
	function openComment(event, weight) {
		$sendMessageBtn.prop('onclick', null).off('click');
		$sendMessageBtn.click(function (event) {
			postComment(event, weight);
		});
		$feedbackDiv.fadeIn('fast', function () {
		    var pane = dxspMain.GetPaneByName("main");
		    var containerHeight = $(mainPaneDiv.GetMainElement()).height();
		    if (!isFixed) {
		        $(pane.helper.GetContentContainerElement()).animate({ scrollTop: containerHeight }, 500);
		    }
			$message.focus();
		});
		AdjustDocument();
		$detailsLink.fadeOut('fast', function () { $cancelBtn.show(); });
	}
	function appriseSupport(event, weight) {
		hideDetails(function () {
			if ($detailsLink.hasClass('hidden')/* css('display') === 'none'*/ || openedEmotion !== weight) {
				$detailsLink.prop('onclick', null).off('click');
				$detailsLink.click(function () { openComment(event, weight) });
				$detailsLink.fadeIn('fast');
				openedEmotion = weight;
			}
		});
		if (currentMark !== weight) {
			sendEvent(event, weight);
			currentMark = weight;
			colorSmiles(weight);
		}
	}
	var $documentContainer = $('.Document');
	var $documentContentPane = $('.DocumentContentPane');
	var $documentContentPaneContainer = $documentContentPane.find('> div.dxsplLCC');
	var $appriseHolder = $('<div id="apprise-holder"></div>');

	function AdjustDocument() {
	    if (isFixed) {
	        if ($documentContentPane.height() + $documentContentPaneContainer.scrollTop() - $appriseDiv.height() >= $appriseHolder.position().top) {
	            $appriseDiv.css("position", "static");
	            $appriseHolder.height('auto');
	        } else {
	            $appriseHolder.height($appriseDiv.height());
	            $appriseDiv.css("position", "absolute").css("top", $documentContentPane.height() + $documentContentPaneContainer.scrollTop() - $appriseDiv.height() - 1 + "px");
	        }
	    }
	}


	colorSmiles(currentMark);
	$positive.click(function (event) { appriseSupport(event, positiveWeight); });
	$middle.click(function (event) { appriseSupport(event, middleWeigth); });
	$negative.click(function (event) { appriseSupport(event, negativeWeight); });
	$cancelBtn.click(function () {
		hideDetails(function () { $detailsLink.fadeIn('fast'); });
	});
	var isFixed = navigator.userAgent.indexOf('AppleWebKit') != -1 && navigator.userAgent.indexOf('Edge/') == -1;
	if (isFixed) {
	    $appriseDiv.addClass("Fixed");
	    $appriseHolder.insertBefore($appriseDiv);
	    $(document).ready(AdjustDocument);
	    $(window).resize(AdjustDocument);
	    $($documentContentPaneContainer).scroll(AdjustDocument);
	}
}